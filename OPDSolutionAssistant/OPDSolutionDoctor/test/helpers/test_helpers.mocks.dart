// Mocks generated by Mockito 5.4.2 from annotations
// in opd_doctor/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:dio/dio.dart' as _i2;
import 'package:flutter/material.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:opd_doctor/services/app_service.dart' as _i7;
import 'package:opd_doctor/services/auth_service.dart' as _i8;
import 'package:opd_doctor/services/shared_service.dart' as _i10;
import 'package:opd_doctor/services/user_service.dart' as _i9;
import 'package:stacked_services/stacked_services.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i3.NavigationService {
  @override
  String get previousRoute => (super.noSuchMethod(
        Invocation.getter(#previousRoute),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get currentRoute => (super.noSuchMethod(
        Invocation.getter(#currentRoute),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i4.GlobalKey<_i4.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(
        Invocation.method(
          #nestedNavigationKey,
          [index],
        ),
        returnValueForMissingStub: null,
      ) as _i4.GlobalKey<_i4.NavigatorState>?);
  @override
  void config({
    bool? enableLog,
    bool? defaultPopGesture,
    bool? defaultOpaqueRoute,
    Duration? defaultDurationTransition,
    bool? defaultGlobalState,
    _i3.Transition? defaultTransitionStyle,
    String? defaultTransition,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransitionStyle: defaultTransitionStyle,
            #defaultTransition: defaultTransition,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<T?>? navigateWithTransition<T>(
    _i4.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i4.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i3.Transition? transitionClass,
    _i3.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);
  @override
  _i5.Future<T?>? replaceWithTransition<T>(
    _i4.Widget? page, {
    bool? opaque,
    String? transition = r'',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i4.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i3.Transition? transitionClass,
    _i3.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWithTransition,
          [page],
          {
            #opaque: opaque,
            #transition: transition,
            #duration: duration,
            #popGesture: popGesture,
            #id: id,
            #curve: curve,
            #fullscreenDialog: fullscreenDialog,
            #preventDuplicates: preventDuplicates,
            #transitionClass: transitionClass,
            #transitionStyle: transitionStyle,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);
  @override
  bool back<T>({
    dynamic result,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {
            #result: result,
            #id: id,
          },
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void popUntil(
    _i4.RoutePredicate? predicate, {
    int? id,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void popRepeated(int? popTimes) => super.noSuchMethod(
        Invocation.method(
          #popRepeated,
          [popTimes],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<T?>? navigateTo<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i4.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);
  @override
  _i5.Future<T?>? navigateToView<T>(
    _i4.Widget? view, {
    dynamic arguments,
    int? id,
    bool? opaque,
    _i4.Curve? curve,
    Duration? duration,
    bool? fullscreenDialog = false,
    bool? popGesture,
    bool? preventDuplicates = true,
    _i3.Transition? transition,
    _i3.Transition? transitionStyle,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToView,
          [view],
          {
            #arguments: arguments,
            #id: id,
            #opaque: opaque,
            #curve: curve,
            #duration: duration,
            #fullscreenDialog: fullscreenDialog,
            #popGesture: popGesture,
            #preventDuplicates: preventDuplicates,
            #transition: transition,
            #transitionStyle: transitionStyle,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);
  @override
  _i5.Future<T?>? replaceWith<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i4.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceWith,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
            #transition: transition,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);
  @override
  _i5.Future<T?>? clearStackAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);
  @override
  _i5.Future<T?>? clearStackAndShowView<T>(
    _i4.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearStackAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);
  @override
  _i5.Future<T?>? clearTillFirstAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShow,
          [routeName],
          {
            #arguments: arguments,
            #id: id,
            #preventDuplicates: preventDuplicates,
            #parameters: parameters,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);
  @override
  _i5.Future<T?>? clearTillFirstAndShowView<T>(
    _i4.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearTillFirstAndShowView,
          [view],
          {
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);
  @override
  _i5.Future<T?>? pushNamedAndRemoveUntil<T>(
    String? routeName, {
    _i4.RoutePredicate? predicate,
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamedAndRemoveUntil,
          [routeName],
          {
            #predicate: predicate,
            #arguments: arguments,
            #id: id,
          },
        ),
        returnValueForMissingStub: null,
      ) as _i5.Future<T?>?);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i3.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i3.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i3.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = r'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i5.Future<_i3.SheetResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i5.Future<_i3.SheetResponse<dynamic>?>.value(),
      ) as _i5.Future<_i3.SheetResponse<dynamic>?>);
  @override
  _i5.Future<_i3.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i6.Color? barrierColor = const _i6.Color(2315255808),
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = r'',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i5.Future<_i3.SheetResponse<T>?>.value(),
        returnValueForMissingStub: _i5.Future<_i3.SheetResponse<T>?>.value(),
      ) as _i5.Future<_i3.SheetResponse<T>?>);
  @override
  void completeSheet(_i3.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i3.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i3.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i4.Widget Function(
      _i4.BuildContext,
      _i3.DialogRequest<dynamic>,
      dynamic Function(_i3.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i3.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i6.Color? cancelTitleColor,
    String? buttonTitle = r'Ok',
    _i6.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i3.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i5.Future<_i3.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i5.Future<_i3.DialogResponse<dynamic>?>.value(),
      ) as _i5.Future<_i3.DialogResponse<dynamic>?>);
  @override
  _i5.Future<_i3.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i6.Color? barrierColor = const _i6.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = r'',
    bool? useSafeArea = true,
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #useSafeArea: useSafeArea,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i5.Future<_i3.DialogResponse<T>?>.value(),
        returnValueForMissingStub: _i5.Future<_i3.DialogResponse<T>?>.value(),
      ) as _i5.Future<_i3.DialogResponse<T>?>);
  @override
  _i5.Future<_i3.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = r'Cancel',
    _i6.Color? cancelTitleColor,
    String? confirmationTitle = r'Ok',
    _i6.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i3.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i5.Future<_i3.DialogResponse<dynamic>?>.value(),
        returnValueForMissingStub:
            _i5.Future<_i3.DialogResponse<dynamic>?>.value(),
      ) as _i5.Future<_i3.DialogResponse<dynamic>?>);
  @override
  void completeDialog(_i3.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AppService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppService extends _i1.Mock implements _i7.AppService {
  @override
  _i5.Future<dynamic> bootstrap() => (super.noSuchMethod(
        Invocation.method(
          #bootstrap,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i8.AuthService {
  @override
  _i5.Future<bool> prepareUserSession() => (super.noSuchMethod(
        Invocation.method(
          #prepareUserSession,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<_i2.Response<dynamic>> loginWithPhoneNumber(String? phoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginWithPhoneNumber,
          [phoneNumber],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #loginWithPhoneNumber,
            [phoneNumber],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #loginWithPhoneNumber,
            [phoneNumber],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> verifyOtp(
    String? otp,
    String? phoneNumber,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyOtp,
          [
            otp,
            phoneNumber,
          ],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #verifyOtp,
            [
              otp,
              phoneNumber,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #verifyOtp,
            [
              otp,
              phoneNumber,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<bool> processLoggedInData(_i2.Response<dynamic>? json) =>
      (super.noSuchMethod(
        Invocation.method(
          #processLoggedInData,
          [json],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<dynamic> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i9.UserService {
  @override
  _i5.Future<_i2.Response<dynamic>> searchUser(String? phoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchUser,
          [phoneNumber],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #searchUser,
            [phoneNumber],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #searchUser,
            [phoneNumber],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> addNewUser(dynamic data) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNewUser,
          [data],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #addNewUser,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #addNewUser,
            [data],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> updateUser(dynamic data) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [data],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #updateUser,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #updateUser,
            [data],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> updateUserVitals(dynamic data) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserVitals,
          [data],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #updateUserVitals,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #updateUserVitals,
            [data],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> getSymptoms() => (super.noSuchMethod(
        Invocation.method(
          #getSymptoms,
          [],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getSymptoms,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getSymptoms,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> addSymptoms(dynamic data) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSymptoms,
          [data],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #addSymptoms,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #addSymptoms,
            [data],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> addReport(dynamic data) =>
      (super.noSuchMethod(
        Invocation.method(
          #addReport,
          [data],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #addReport,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #addReport,
            [data],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> addRerord(dynamic data) =>
      (super.noSuchMethod(
        Invocation.method(
          #addRerord,
          [data],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #addRerord,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #addRerord,
            [data],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> addPatientAdvice(dynamic data) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPatientAdvice,
          [data],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #addPatientAdvice,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #addPatientAdvice,
            [data],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> addMedicine(dynamic data) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMedicine,
          [data],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #addMedicine,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #addMedicine,
            [data],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> addDiagnosis(dynamic data) =>
      (super.noSuchMethod(
        Invocation.method(
          #addDiagnosis,
          [data],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #addDiagnosis,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #addDiagnosis,
            [data],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> getAppointmentDatesById(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAppointmentDatesById,
          [id],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getAppointmentDatesById,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getAppointmentDatesById,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> getUserDeatilsById(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserDeatilsById,
          [id],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getUserDeatilsById,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getUserDeatilsById,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> getMedicalRecords(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMedicalRecords,
          [id],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getMedicalRecords,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getMedicalRecords,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> getReports({
    dynamic appointmentId,
    dynamic reportName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReports,
          [],
          {
            #appointmentId: appointmentId,
            #reportName: reportName,
          },
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getReports,
            [],
            {
              #appointmentId: appointmentId,
              #reportName: reportName,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getReports,
            [],
            {
              #appointmentId: appointmentId,
              #reportName: reportName,
            },
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> getAllPatient() => (super.noSuchMethod(
        Invocation.method(
          #getAllPatient,
          [],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getAllPatient,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getAllPatient,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> getReportUrl({dynamic appointmentId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReportUrl,
          [],
          {#appointmentId: appointmentId},
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getReportUrl,
            [],
            {#appointmentId: appointmentId},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getReportUrl,
            [],
            {#appointmentId: appointmentId},
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> getSymptomsById() => (super.noSuchMethod(
        Invocation.method(
          #getSymptomsById,
          [],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getSymptomsById,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getSymptomsById,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> getDiagnosisById() => (super.noSuchMethod(
        Invocation.method(
          #getDiagnosisById,
          [],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getDiagnosisById,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getDiagnosisById,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> getReportsById() => (super.noSuchMethod(
        Invocation.method(
          #getReportsById,
          [],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getReportsById,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getReportsById,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> getMedicineById() => (super.noSuchMethod(
        Invocation.method(
          #getMedicineById,
          [],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getMedicineById,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getMedicineById,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> postMedicineStatus(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #postMedicineStatus,
          [id],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #postMedicineStatus,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #postMedicineStatus,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> postSymptomStatus(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #postSymptomStatus,
          [id],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #postSymptomStatus,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #postSymptomStatus,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> postReportStatus(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #postReportStatus,
          [id],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #postReportStatus,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #postReportStatus,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> postDiagnosisStatus(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #postDiagnosisStatus,
          [id],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #postDiagnosisStatus,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #postDiagnosisStatus,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> getDoctorInfo() => (super.noSuchMethod(
        Invocation.method(
          #getDoctorInfo,
          [],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getDoctorInfo,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getDoctorInfo,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> getDoctorDetails() => (super.noSuchMethod(
        Invocation.method(
          #getDoctorDetails,
          [],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getDoctorDetails,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #getDoctorDetails,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> updateAssistantDetail(dynamic data) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAssistantDetail,
          [data],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #updateAssistantDetail,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #updateAssistantDetail,
            [data],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> updateDoctor(dynamic data) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDoctor,
          [data],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #updateDoctor,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #updateDoctor,
            [data],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> updateDoctorSchedule(dynamic data) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDoctorSchedule,
          [data],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #updateDoctorSchedule,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #updateDoctorSchedule,
            [data],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> updateClinicDetail(dynamic data) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateClinicDetail,
          [data],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #updateClinicDetail,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #updateClinicDetail,
            [data],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> updateClinicPic(dynamic data) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateClinicPic,
          [data],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #updateClinicPic,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #updateClinicPic,
            [data],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> addClinicDetail(dynamic data) =>
      (super.noSuchMethod(
        Invocation.method(
          #addClinicDetail,
          [data],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #addClinicDetail,
            [data],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #addClinicDetail,
            [data],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
  @override
  _i5.Future<_i2.Response<dynamic>> updateProfilePic(
    dynamic id,
    dynamic data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfilePic,
          [
            id,
            data,
          ],
        ),
        returnValue:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #updateProfilePic,
            [
              id,
              data,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #updateProfilePic,
            [
              id,
              data,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Response<dynamic>>);
}

/// A class which mocks [SharedService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedService extends _i1.Mock implements _i10.SharedService {
  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);
  @override
  _i5.Future<bool> prepareUserInfo() => (super.noSuchMethod(
        Invocation.method(
          #prepareUserInfo,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
